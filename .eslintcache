[{"/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/App.js":"1","/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/Components/addColumn/AddColumn.js":"2","/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/Components/KanbanBoard/KanbanBoard.js":"3","/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/reportWebVitals.js":"4","/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/index.js":"5","/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/Components/InventoryCard/InventoryCard.js":"6"},{"size":1265,"mtime":1607327623493,"results":"7","hashOfConfig":"8"},{"size":2109,"mtime":1607321761485,"results":"9","hashOfConfig":"8"},{"size":8920,"mtime":1607328177540,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1607055186873,"results":"11","hashOfConfig":"8"},{"size":543,"mtime":1607055688619,"results":"12","hashOfConfig":"8"},{"size":1278,"mtime":1607140269851,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1im3e4c",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/App.js",["27","28","29","30","31","32"],"/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/Components/addColumn/AddColumn.js",["33"],"import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {v4 as uuid} from 'uuid';\n\n\nconst AddColumn = props => {\n\n    const [newColumn ,setNewColumn] = useState({id: null, columnName : '' , items:[]});\n\n    const handleAddColumn = (e) =>{\n        e.preventDefault()\n        // todo props.setAddColumns\n        const setNewColumnId = {\n            [uuid()]:{\n                name: newColumn.columnName,\n                items:[]\n            }\n        }\n\n        props.setColumns({...props.columns, ...setNewColumnId})\n    }\n    \n    const handleInputChange = (event) =>{\n        const { name, value } = event.target\n\n        // setUser({ ...user, [name]: value })\n        setNewColumn({...newColumn, [name]: value})\n\n    }\n\n    const handleSaveColumn = (e) =>{\n        e.preventDefault()\n        // props.setColumns(localStorage.getItem('myData'))\n        localStorage.setItem('myData', JSON.stringify( props.columns));\n\n    }\n\n    const handleLoadColumn = (e)=>{\n        e.preventDefault();\n        props.setColumns(JSON.parse(localStorage.getItem('myData')))\n        // props.setColumns(JSON.parse(localStorage.getItem('myData'))) \n    }\n    const clearColumns = (e) =>{\n        e.preventDefault();\n        localStorage.clear()\n    }\n    return (\n        <div>\n            <form class=\"border border-light p-5\">\n\n                <input type=\"text\" name=\"columnName\" value = {newColumn.columnName} onChange={handleInputChange} id=\"columnNameInput\" class=\"form-control mb-4\" placeholder=\"Enter Column name here.. \" />\n\n             < button class=\"btn btn-info btn-block\" onClick={handleAddColumn} type=\"submit\">New Column</button>\n             < button class=\"btn btn-info btn-block\" onClick={handleSaveColumn} type=\"submit\">Save Columns</button>\n             < button class=\"btn btn-info btn-block\" onClick={handleLoadColumn} type=\"submit\">Load Columns</button>\n             < button class=\"btn btn-info btn-block\" onClick={clearColumns} type=\"submit\">Clear Columns</button>\n            </form>\n            \n        </div>\n    )\n}\n\nAddColumn.propTypes = {\n\n}\n\nexport default AddColumn\n","/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/Components/KanbanBoard/KanbanBoard.js",["34","35","36","37","38"],"/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/reportWebVitals.js",[],"/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/index.js",[],"/Users/fredyyudiawan/Documents/Github/react-dnd-example/src/Components/InventoryCard/InventoryCard.js",["39"],{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":21},{"ruleId":"40","severity":1,"message":"44","line":6,"column":9,"nodeType":"42","messageId":"43","endLine":6,"endColumn":21},{"ruleId":"40","severity":1,"message":"45","line":16,"column":10,"nodeType":"42","messageId":"43","endLine":16,"endColumn":19},{"ruleId":"40","severity":1,"message":"46","line":16,"column":21,"nodeType":"42","messageId":"43","endLine":16,"endColumn":33},{"ruleId":"40","severity":1,"message":"47","line":17,"column":10,"nodeType":"42","messageId":"43","endLine":17,"endColumn":17},{"ruleId":"40","severity":1,"message":"48","line":17,"column":19,"nodeType":"42","messageId":"43","endLine":17,"endColumn":29},{"ruleId":"40","severity":1,"message":"49","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":17},{"ruleId":"40","severity":1,"message":"49","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":17},{"ruleId":"40","severity":1,"message":"50","line":4,"column":15,"nodeType":"42","messageId":"43","endLine":4,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":21},{"ruleId":"40","severity":1,"message":"44","line":7,"column":9,"nodeType":"42","messageId":"43","endLine":7,"endColumn":21},{"ruleId":"51","severity":1,"message":"52","line":29,"column":8,"nodeType":"53","endLine":29,"endColumn":10,"suggestions":"54"},{"ruleId":"40","severity":1,"message":"49","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":17},"no-unused-vars","'InventoryCard' is defined but never used.","Identifier","unusedVar","'MDBContainer' is defined but never used.","'companyId' is assigned a value but never used.","'setCompanyId' is assigned a value but never used.","'spaceId' is assigned a value but never used.","'setSpaceId' is assigned a value but never used.","'PropTypes' is defined but never used.","'uuid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setColumns'. Either include it or remove the dependency array.","ArrayExpression",["55"],{"desc":"56","fix":"57"},"Update the dependencies array to be: [setColumns]",{"range":"58","text":"59"},[760,762],"[setColumns]"]