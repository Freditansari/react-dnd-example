[{"/Users/fredyyudiawan/Documents/example/react-dnd-example/src/index.js":"1","/Users/fredyyudiawan/Documents/example/react-dnd-example/src/App.js":"2","/Users/fredyyudiawan/Documents/example/react-dnd-example/src/Components/addColumn/AddColumn.js":"3","/Users/fredyyudiawan/Documents/example/react-dnd-example/src/reportWebVitals.js":"4","/Users/fredyyudiawan/Documents/example/react-dnd-example/src/Components/KanbanBoard/KanbanBoard.js":"5"},{"size":543,"mtime":1607247498042,"results":"6","hashOfConfig":"7"},{"size":1228,"mtime":1607337847402,"results":"8","hashOfConfig":"7"},{"size":2109,"mtime":1607335071192,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1607236928195,"results":"10","hashOfConfig":"7"},{"size":8939,"mtime":1607340863664,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jyd9q5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fredyyudiawan/Documents/example/react-dnd-example/src/index.js",[],"/Users/fredyyudiawan/Documents/example/react-dnd-example/src/App.js",["23","24","25","26","27"],"/Users/fredyyudiawan/Documents/example/react-dnd-example/src/Components/addColumn/AddColumn.js",["28"],"import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {v4 as uuid} from 'uuid';\n\n\nconst AddColumn = props => {\n\n    const [newColumn ,setNewColumn] = useState({id: null, columnName : '' , items:[]});\n\n    const handleAddColumn = (e) =>{\n        e.preventDefault()\n        // todo props.setAddColumns\n        const setNewColumnId = {\n            [uuid()]:{\n                name: newColumn.columnName,\n                items:[]\n            }\n        }\n\n        props.setColumns({...props.columns, ...setNewColumnId})\n    }\n    \n    const handleInputChange = (event) =>{\n        const { name, value } = event.target\n\n        // setUser({ ...user, [name]: value })\n        setNewColumn({...newColumn, [name]: value})\n\n    }\n\n    const handleSaveColumn = (e) =>{\n        e.preventDefault()\n        // props.setColumns(localStorage.getItem('myData'))\n        localStorage.setItem('myData', JSON.stringify( props.columns));\n\n    }\n\n    const handleLoadColumn = (e)=>{\n        e.preventDefault();\n        props.setColumns(JSON.parse(localStorage.getItem('myData')))\n        // props.setColumns(JSON.parse(localStorage.getItem('myData'))) \n    }\n    const clearColumns = (e) =>{\n        e.preventDefault();\n        localStorage.clear()\n    }\n    return (\n        <div>\n            <form class=\"border border-light p-5\">\n\n                <input type=\"text\" name=\"columnName\" value = {newColumn.columnName} onChange={handleInputChange} id=\"columnNameInput\" class=\"form-control mb-4\" placeholder=\"Enter Column name here.. \" />\n\n             < button class=\"btn btn-info btn-block\" onClick={handleAddColumn} type=\"submit\">New Column</button>\n             < button class=\"btn btn-info btn-block\" onClick={handleSaveColumn} type=\"submit\">Save Columns</button>\n             < button class=\"btn btn-info btn-block\" onClick={handleLoadColumn} type=\"submit\">Load Columns</button>\n             < button class=\"btn btn-info btn-block\" onClick={clearColumns} type=\"submit\">Clear Columns</button>\n            </form>\n            \n        </div>\n    )\n}\n\nAddColumn.propTypes = {\n\n}\n\nexport default AddColumn\n","/Users/fredyyudiawan/Documents/example/react-dnd-example/src/reportWebVitals.js",[],"/Users/fredyyudiawan/Documents/example/react-dnd-example/src/Components/KanbanBoard/KanbanBoard.js",["29","30","31","32"],{"ruleId":"33","severity":1,"message":"34","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":21},{"ruleId":"33","severity":1,"message":"37","line":16,"column":10,"nodeType":"35","messageId":"36","endLine":16,"endColumn":19},{"ruleId":"33","severity":1,"message":"38","line":16,"column":21,"nodeType":"35","messageId":"36","endLine":16,"endColumn":33},{"ruleId":"33","severity":1,"message":"39","line":17,"column":10,"nodeType":"35","messageId":"36","endLine":17,"endColumn":17},{"ruleId":"33","severity":1,"message":"40","line":17,"column":19,"nodeType":"35","messageId":"36","endLine":17,"endColumn":29},{"ruleId":"33","severity":1,"message":"41","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":17},{"ruleId":"33","severity":1,"message":"41","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":17},{"ruleId":"33","severity":1,"message":"42","line":4,"column":15,"nodeType":"35","messageId":"36","endLine":4,"endColumn":19},{"ruleId":"33","severity":1,"message":"34","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":28,"column":8,"nodeType":"45","endLine":28,"endColumn":10,"suggestions":"46"},"no-unused-vars","'InventoryCard' is defined but never used.","Identifier","unusedVar","'companyId' is assigned a value but never used.","'setCompanyId' is assigned a value but never used.","'spaceId' is assigned a value but never used.","'setSpaceId' is assigned a value but never used.","'PropTypes' is defined but never used.","'uuid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setColumns'. Either include it or remove the dependency array.","ArrayExpression",["47"],{"desc":"48","fix":"49"},"Update the dependencies array to be: [setColumns]",{"range":"50","text":"51"},[722,724],"[setColumns]"]